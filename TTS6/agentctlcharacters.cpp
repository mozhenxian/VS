// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "agentctlcharacters.h"

// Dispatch interfaces referenced by this interface
#include "agentctlcharacterex.h"
#include "agentctlrequest.h"


/////////////////////////////////////////////////////////////////////////////
// CAgentCtlCharacters properties

/////////////////////////////////////////////////////////////////////////////
// CAgentCtlCharacters operations

CAgentCtlCharacterEx CAgentCtlCharacters::GetItem(LPCTSTR CharacterID)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		CharacterID);
	return CAgentCtlCharacterEx(pDispatch);
}

CAgentCtlCharacterEx CAgentCtlCharacters::Character(LPCTSTR CharacterID)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		CharacterID);
	return CAgentCtlCharacterEx(pDispatch);
}

void CAgentCtlCharacters::Unload(LPCTSTR CharacterID)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 CharacterID);
}

CAgentCtlRequest CAgentCtlCharacters::Load(LPCTSTR CharacterID, const VARIANT& LoadKey)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR VTS_VARIANT;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		CharacterID, &LoadKey);
	return CAgentCtlRequest(pDispatch);
}
